
// Generate colour variants
@mixin gen-bg-variants($variants: $color-variants) {
  @each $variant in map-keys($variants) {
    $value: map-get($variants, $variant);

    &--#{$variant} {
      background: $value;
    }
  }
}
@mixin gen-color-variants($variants: $color-variants) {
  @each $variant in map-keys($variants) {
    $value: map-get($variants, $variant);

    &--#{$variant} {
      color: $value;
    }
  }
}


// Generate reordering
@mixin gen-reorder($breakpoints: $grid-breakpoints) {
  @each $break in map-keys($breakpoints) {
    @include media-breakpoint-up($break) {
      .bench-#{$break}-first, .item-#{$break}-first { order: -1; }
      .bench-#{$break}-reset, .item-#{$break}-reset { order: 0; }
      .bench-#{$break}-last, .item-#{$break}-last   { order: 1; }
    }
  }
}

// Generate direction
@mixin gen-directions($breakpoints: $grid-breakpoints) {
  @each $break in map-keys($breakpoints) {
    @include media-breakpoint-up($break) {
      .guns-#{$break}, .horizontal-#{$break}    { flex-direction: row; }
      .leg-day-#{$break}, .vertical-#{$break}   { flex-direction: column; }
    }
  }
}

// Generate justify
@mixin gen-justify($breakpoints: $grid-breakpoints) {
  @each $break in map-keys($breakpoints) {
    @include media-breakpoint-up($break) {
      .guns-#{$break}-start, .justify-#{$break}-start   { justify-content: flex-start; }
      .guns-#{$break}-center, .justify-#{$break}-center { justify-content: center; }
      .guns-#{$break}-end, .justify-#{$break}-end       { justify-content: flex-end; }
    }
  }
}

// Generate align-items
@mixin gen-align-items($breakpoints: $grid-breakpoints) {
  @each $break in map-keys($breakpoints) {
    @include media-breakpoint-up($break) {
      .swole-#{$break}-top, .row-#{$break}-top        { align-items: flex-start; }
      .swole-#{$break}-center, .row-#{$break}-center  { align-items: center; }
      .swole-#{$break}-stretch, .row-#{$break}-stretch{ align-items: stretch; }
      .swole-#{$break}-bottom, .row-#{$break}-bottom  { align-items: flex-end; }
    }
  }
}

// Generate align-self
@mixin gen-align-self($breakpoints: $grid-breakpoints) {
  @each $break in map-keys($breakpoints) {
    @include media-breakpoint-up($break) {
      .bench-#{$break}-top, .item-#{$break}-top        { align-self: flex-start; }
      .bench-#{$break}-center, .item-#{$break}-center  { align-self: center; }
      .bench-#{$break}-stretch, .item-#{$break}-stretch{ align-self: stretch; height: auto !important; }
      .bench-#{$break}-bottom, .item-#{$break}-bottom  { align-self: flex-end; }
    }
  }
}